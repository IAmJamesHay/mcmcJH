library(devtools)
install_github("jameshay218/mcmcJH")
library(mcmcJH)
ls
posterior
posterior
dnorm(5,sd=5,log=TRUE)
dnorm(5,mean=0,sd=5,log=TRUE)
dnorm(5,mean=7.5,sd=5,log=TRUE)
debug()
browser()
Q
c
cont
test_function <- function(a, b){
print("start")
print(a)
print(b)
print(a+b)
}
test_function(1,2)
Q
test_function(1,2)
test_function(1,2)
a
b
a+b
n
n
n
 install_github("jameshay218/mcmcJH")
library(mcmcJH)
scaletuning
getwd()
setwd("~/Documents/ferret_results/")
i
Q
i
Q
Q
setwd("~/Documents/ferret_results/")
where
where
quit()
n
library(mcmcJH)
chains <- NULL
chains[[1]] <- "~/Documents/ferret_results/mcmc_outputs/outputs_tp_FIXED/tmp/Grp 1 (H3N2)_panama_1_chain.csv"
chains[[2]] <- "~/Documents/ferret_results/mcmc_outputs/outputs_tp_FIXED/tmp/Grp 1 (H3N2)_panama_2_chain.csv"
chains[[3]] <- "~/Documents/ferret_results/mcmc_outputs/outputs_tp_FIXED/tmp/Grp 1 (H3N2)_panama_3_chain.csv"
tmp_big_chain <- NULL
for(i in 1:length(chains)){
tmp_big_chain <- rbind(tmp_big_chain,chain
}
}
tmp_chains <- chains
burnin <- 10000
adaptive_period <- 10000
 best_pars <- NULL
    best_lnlike <- -Inf

    #' Container to rbind all chains
    tmp_big_chain <- NULL

    #' Go through and find maximum likelihood parameters
    for(i in 1:length(tmp_chains)){
        tmp <- read.csv(tmp_chains[[i]], header=1)
        # Remove burnin and only save parameter values (ie. remove sampleno and lnlikelihood)
        tmp_big_chain <- rbind(tmp_big_chain,tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        #' This needs to change, as might only be saving every say 5th iteration. Needs to be:
        #' final_chains[[i]] <- as.mcmc(tmp[tmp$iteration > (burnin+adaptive_period),2:ncol(tmp)])
        final_chains[[i]] <- as.mcmc(tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        if(max(tmp[,ncol(tmp)]) > best_lnlike){
            best_pars <- tmp[which.max(tmp[,ncol(tmp)]),2:(ncol(tmp)-1)]
            best_lnlike <- max(tmp[,ncol(tmp)])
        }
    }
final_chains <- NULL
  # Reload all chains to return
    final_chains <- NULL
    # Find maximum likelihood parameters
    best_pars <- NULL
    best_lnlike <- -Inf

    #' Container to rbind all chains
    tmp_big_chain <- NULL

    #' Go through and find maximum likelihood parameters
    for(i in 1:length(tmp_chains)){
        tmp <- read.csv(tmp_chains[[i]], header=1)
        # Remove burnin and only save parameter values (ie. remove sampleno and lnlikelihood)
        #'tmp_big_chain <- rbind(tmp_big_chain,tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        tmp_big_chain <- rbind(tmp_big_chain,tmp[tmp$iteration > (burnin+adaptive_period),2:ncol(tmp)])
        #' This needs to change, as might only be saving every say 5th iteration. Needs to be:
        final_chains[[i]] <- as.mcmc(tmp[tmp$iteration > (burnin+adaptive_period),2:ncol(tmp)])
        #'final_chains[[i]] <- as.mcmc(tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        if(max(tmp[,ncol(tmp)]) > best_lnlike){
            best_pars <- tmp[which.max(tmp[,ncol(tmp)]),2:(ncol(tmp)-1)]
            best_lnlike <- max(tmp[,ncol(tmp)])
        }
 # Reload all chains to return
    final_chains <- NULL
    # Find maximum likelihood parameters
    best_pars <- NULL
    best_lnlike <- -Inf

    #' Container to rbind all chains
    tmp_big_chain <- NULL

    #' Go through and find maximum likelihood parameters
    for(i in 1:length(tmp_chains)){
        tmp <- read.csv(tmp_chains[[i]], header=1)
        # Remove burnin and only save parameter values (ie. remove sampleno and lnlikelihood)
        tmp_big_chain <- rbind(tmp_big_chain,tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        #'tmp_big_chain <- rbind(tmp_big_chain,tmp[tmp$iteration > (burnin+adaptive_period),2:ncol(tmp)])
        #' This needs to change, as might only be saving every say 5th iteration. Needs to be:
        #'final_chains[[i]] <- as.mcmc(tmp[tmp$iteration > (burnin+adaptive_period),2:ncol(tmp)])
        final_chains[[i]] <- as.mcmc(tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        if(max(tmp[,ncol(tmp)]) > best_lnlike){
            best_pars <- tmp[which.max(tmp[,ncol(tmp)]),2:(ncol(tmp)-1)]
            best_lnlike <- max(tmp[,ncol(tmp)])
        }
    }
best_pars
best_lnlike
colnames(tmp)
  # Reload all chains to return
    final_chains <- NULL
    # Find maximum likelihood parameters
    best_pars <- NULL
    best_lnlike <- -Inf

    #' Container to rbind all chains
    tmp_big_chain <- NULL

    #' Go through and find maximum likelihood parameters
    for(i in 1:length(tmp_chains)){
        tmp <- read.csv(tmp_chains[[i]], header=1)
        # Remove burnin and only save parameter values (ie. remove sampleno and lnlikelihood)
        #'tmp_big_chain <- rbind(tmp_big_chain,tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        tmp_big_chain <- rbind(tmp_big_chain,tmp[tmp$sampno > (burnin+adaptive_period),2:ncol(tmp)])
        #' This needs to change, as might only be saving every say 5th iteration. Needs to be:
        final_chains[[i]] <- as.mcmc(tmp[tmp$sampno > (burnin+adaptive_period),2:ncol(tmp)])
        #'final_chains[[i]] <- as.mcmc(tmp[(burnin+adaptive_period):nrow(tmp),2:ncol(tmp)])
        if(max(tmp[,ncol(tmp)]) > best_lnlike){
            best_pars <- tmp[which.max(tmp[,ncol(tmp)]),2:(ncol(tmp)-1)]
            best_lnlike <- max(tmp[,ncol(tmp)])
        }
    }

best_pars
best_lnlike
 #' Use the rbound chain to get density estimates and therefore modes
    colnames(tmp_big_chain) <- colnames(final_chains[[i]])

    modal_pars <- NULL

    for(index in 1:ncol(tmp_big_chain)){
        tmp_den <- tmp_big_chain[,index]
        z <- density(tmp_den)
        mode_par <- z$x[which.max(z$y)]
        modal_pars[index] <- mode_par
    }
mode_par
 modal_pars
 modal_pars[3]
 modal_pars[4]
 modal_pars[5]
 modal_pars[1]
 modal_pars[2]
 modal_pars[3]
 modal_pars[4]
 modal_pars[5]
 modal_pars[6]
 modal_pars[7]
 modal_pars[8]
# Convert results to returnable format
    combined_mcmc <- as.mcmc.list(final_chains)
    mcmc_summary <- summary(combined_mcmc)
greb <- list(chains=final_chains,summary=mcmc_summary,files=tmp_chains,params=best_pars, mode_params=modal_pars)
greb[[4]]
greb[[5]]
best_pars_plot <- greb$params
best_pars <- as.numeric(greb$params)
mode_pars <- greb$mode_params
tmp_mcmc_results <- greb
tmp_table <- tmp_mcmc_results$summary$statistics
    tmp_table <- cbind(tmp_table, tmp_mcmc_results$summary$quantiles,effective_sample_size,c(mode_pars,NA),c(best_pars,NA))
    colnames(tmp_table)[ncol(tmp_table)] <- "maximum likelihood"
    colnames(tmp_table)[ncol(tmp_table)-1] <- "modal params"
fixed
fixed <- c(1,1,0,0,1,0,0,1,0,0,1,0,0)
# Plot densities and iter plots
    tmp_chains <- NULL
    for(i in 1:length(tmp_mcmc_results$files)){
        tmp_chains[[i]] <- read.csv(tmp_mcmc_results$files[[i]], header=1)
       #' tmp_chains[[i]] <- tmp_chains[[i]][,c(1,which(param_table$fixed==0)+1)]
        tmp_chains[[i]] <- tmp_chains[[i]][,c(1,which(fixed==0)+1)]
    }
ncol(tmp_chains[[1]](
ncol(tmp_chains[[1]]())
ncol(tmp_chains[[1]]())))
ncol(tmp_chains[[1]])
colnames(tmp_chains[[1]])
filename
filename <- "test"
getwD()
getwd()
setwd("~/")
getwd()
setwd("~/omg")
mcmc_all_plots_multi(filename,tmp_chains,NULL,20000,best_pars_plot)
param_file <- "~/Documents/ferret_results/inputs//OLD/inputs_tp/Grp 1 (H3N2)_params.csv"
  # Parameters for model
    param_table <- read.csv(param_file,header=1)
load_param_table
getwd()
setwd("~/")
param_file <- "/Documents/ferret_results/inputs//OLD/inputs_tp/Grp 1 (H3N2)_params.csv"
param_table
 mcmc_all_plots_multi(filename,tmp_chains,param_table,(burnin+adaptive_period),best_pars_plot)
filename
tmp_chains[[1]][1:10,]
mcmc_chains <- tmp_chains
tmp_filename <- paste(filename, "_MCMC_plots.pdf", sep="")

    # For iter
    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

tmp_all[1:10,]
melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }
melted[1:10,]
unique(melted$variable)
best_fit <- best_fit_pars
best_fit <- best_pars
mcmc_iter_multi(colnames(mcmc_chains[[1]])[2],tmp_all,burnin,
                         best_fit)
mcmc_iter_multi(colnames(mcmc_chains[[1]])[2],tmp_all,burnin,best_fit)
getwd()
setwd("~/omg")
a <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[2],tmp_all,burnin,best_fit)
print(a)
plot(a)
mcmc_chains[[1]][2]
colnames(mcmc_chains[[1]])[2]
tmp_all[1:10,c("iteration","mu1","chain")]
tmp_dat <- tmp_all[,c("iteration","mu1","chain")]
colnames(tmp_dat) <- c("iteration","value2","chain")
tmp_dat[1:10,]
colnames(tmp_dat) <- c("iteration","value","chain")
z <- density(tmp_dat[,"value"])
mean(tmp_dat[,"value"])
z$x[which.max(z$y)]
a <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[2],tmp_all,burnin,best_fit)
a
burnin
best_fit
q <- ggplot(tmp_dat,aes(x=iteration,y=value,colour=chain)) + geom_line() + ggtitle(paste(name, " Iter Plot",sep="")) + geom_vline(xintercept=burnin, colour="green", linetype="longdash")+
        geom_hline(yintercept=mean_line,colour="red") +
            geom_text(aes_q(y=mean_line,label="\nMean",x=max(z$x/2)),colour="red",text=element_text(size=6)) +
                geom_hline(yintercept=mode_line,colour="blue") +
                    geom_text(aes_q(y=mode_line,label="\nMode",x=max(z$x/2)),colour="blue",text=element_text(size=6))
name <- "mu1"
q <- ggplot(tmp_dat,aes(x=iteration,y=value,colour=chain)) + geom_line() + ggtitle(paste(name, " Iter Plot",sep="")) + geom_vline(xintercept=burnin, colour="green", linetype="longdash")+
        geom_hline(yintercept=mean_line,colour="red") +
            geom_text(aes_q(y=mean_line,label="\nMean",x=max(z$x/2)),colour="red",text=element_text(size=6)) +
                geom_hline(yintercept=mode_line,colour="blue") +
                    geom_text(aes_q(y=mode_line,label="\nMode",x=max(z$x/2)),colour="blue",text=element_text(size=6))
mean_line <- mean(tmp_dat[,"value"])
mode_line <- z$x[which.max(z$y)]
q <- ggplot(tmp_dat,aes(x=iteration,y=value,colour=chain)) + geom_line() + ggtitle(paste(name, " Iter Plot",sep="")) + geom_vline(xintercept=burnin, colour="green", linetype="longdash")+
        geom_hline(yintercept=mean_line,colour="red") +
            geom_text(aes_q(y=mean_line,label="\nMean",x=max(z$x/2)),colour="red",text=element_text(size=6)) +
                geom_hline(yintercept=mode_line,colour="blue") +
                    geom_text(aes_q(y=mode_line,label="\nMode",x=max(z$x/2)),colour="blue",text=element_text(size=6))
q
plot(q)
dev.off()
dev.off()
dev.off()
getwd()
pdf("test.pdf")
print(q)
dev.off(
)
png("test.png")
print(q)
dev.off()
best_pars_plot
name(best_pars_plot)
names(best_pars_plot)
 a <- mcmc_density_multi(colnames(mcmc_chains[[1]][1],melted,c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),NULL,best_fit))
melted[1:10,]
 a <- mcmc_density_multi(colnames(mcmc_chains[[1]])[1],melted,c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),NULL,best_fit))
 a <- mcmc_density_multi(colnames(mcmc_chains[[1]])[1],melted,c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),NULL,best_fit)
a
a <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[2],tmp_all,burnin,best_fit)
a
a <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[2],tmp_all,burnin,best_pars_plot)
a
 a <- mcmc_density_multi(colnames(mcmc_chains[[1]])[1],melted,c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),NULL,best_pars_plot)
a
 a <- mcmc_density_multi(colnames(mcmc_chains[[1]])[1],melted,c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),NULL,NULL)
a
c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"])
i <- 1
c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"])
c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[2],"upper_bound"])
c(param_table[param_table$names==colnames(mcmc_chains[[1]])[2],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[2],"upper_bound"])
i <- 2
c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"])
 a <- mcmc_density_multi(colnames(mcmc_chains[[1]])[1],melted,c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),NULL,NULL)
a
mcmc_chains[[1]][1]
 a <- mcmc_density_multi(colnames(mcmc_chains[[1]])[2],melted,c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),NULL,NULL)
a
best_fit <- best_pars_plot

    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,colnames(mcmc_chjains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit),
            mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                               c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),
                               prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                               best_fit
                               )
            ,ncol=2)))
        dev.off()
    }

for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit),
            mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                               c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),
                               prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                               best_fit
                               )
            ,ncol=2)))
        dev.off()
    }

    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit),
            mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                               c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),
                               #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                               NULL
                               best_fit
                               )
            ,ncol=2)))
        dev.off()
    }


    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit),
            mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                               c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),
                               #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                               NULL,
                               best_fit
                               )
            ,ncol=2)))
        dev.off()
    }

    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit),
            mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                               c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]),
                               #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                               NULL,
                               best_fit
                               )
            ,ncol=2)))
        dev.off()
    }
    

    # For iter
    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit),
            mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                               c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                               NULL,
                               best_fit
                               )
            ,ncol=2)))
        dev.off()
    }

burnin
  tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit),
          #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
             #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                #'               NULL,
                   #'            best_fit
                      #'         )
            ,ncol=1)))
        dev.off()
    }

    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit)
          #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
             #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                #'               NULL,
                   #'            best_fit
                      #'         )
            ,ncol=1)))
        dev.off()
    }

    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print(suppressWarnings(grid.arrange(
            mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,
                            best_fit)
          #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
             #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                #'               NULL,
                   #'            best_fit
                      #'         )
            ,ncol=1)))
        dev.off()
    }
    # For iter
    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print( mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit))
          #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
             #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                #'               NULL,
                   #'            best_fit
                      #'         )
        #'            ,ncol=1)))
        dev.off()
    }
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
        png(tmp_filename, height=6,width=16)
        print( mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit))
          #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
             #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                #'               NULL,
                   #'            best_fit
                      #'         )
        #'            ,ncol=1)))
        dev.off()
    }
??ggsave

    # For iter
    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
#'        png(tmp_filename, height=6,width=16)
        tmp_plot <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit)
        #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
        #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
        #'               NULL,
        #'            best_fit
        #'         )
        #'            ,ncol=1)))
   #'     dev.off()
        ggsave(tmp_filename,plot=tmp_plot)
    }
#

    # For iter
    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
#'        png(tmp_filename, height=6,width=16)
        tmp_plot <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit)
        #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
        #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
        #'               NULL,
        #'            best_fit
        #'         )
        #'            ,ncol=1)))
   #'     dev.off()
        ggsave(tmp_filename,plot=tmp_plot,height=10,width=10)
    }

    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
#'        png(tmp_filename, height=6,width=16)
        tmp_plot <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit)
        #'  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
        #'                  c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
        #'               NULL,
        #'            best_fit
        #'         )
        #'            ,ncol=1)))
   #'     dev.off()
        ggsave(tmp_filename,plot=tmp_plot,height=10,width=10)
    }

    # For iter
    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:ncol(mcmc_chains[[1]])){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
#'        png(tmp_filename, height=6,width=16)
        tmp_plot <- arrangeGrob(mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit),  mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                          c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                       NULL,
                    best_fit
                 )
                    ,ncol=2)
   #'     dev.off()
        ggsave(tmp_filename,plot=tmp_plot,height=5,width=10)
    }

 mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                          c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                       NULL,
                    best_fit
                 )
 mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,

                          c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
a <- ble","value","chain")],  C-c C-c  C-c C-c
> 
>          NULL,
                    best_fit
                 )
a <- mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,

                          c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                       NULL,
                    best_fit
                 )
a
class(a)
g <- arrangeGrob(a,a,ncol=2)
ggsave("temp.png",g)
g <- grid.arrange(a,a,ncol=2)
ggsave("temp.png",g)
ggsave("temp.png",a)
ggsave("temp.png",a,height=5,width=5)
ggsave("temp.png",a,height=5,width=5)
a <- mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit)
ggsave("temp.png",a,height=5,width=5)
g <- arrangeGrob(a,a,ncol=2)
ggsave("temp.png",g,height=5,width=10)
g <- grid.arrange(a,a,ncol=2)
png("test.png")
print(g)
dev.off()
g <- grid.arrange(a,ncol=1)
png("test.png")
print(g)
dev.off()
png("test.png")
print(g)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
png("test.png")
print(g)
dev.off()
png("test.png")
plot(g)
dev.off()
ggsave("omg.png",plot=g)
png("test1.png",height=5,width=10)
plot(g)
dev.off()
png("test1.png",height=5,width=10,unit="cm")
png("test1.png",height=400,width=800)
plot(g)
dev.off()
png("test1.png",height=400,width=800)
plot(g)
dev.off()
g <- grid.arrange(a,a,ncol=2)
png("test1.png",height=400,width=800)
plot(g)
dev.off()
plot(g)
g <- grid.arrange(a,a,ncol=2)
dev.off()
dev.off()
plot(g)
cmc_all_plots_multi <- function(filename, mcmc_chains, param_table=NULL,burnin=NULL,best_fit=NULL){
    

    # For iter
    tmp_all <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        colnames(tmp)[1] <- "iteration"
        tmp$chain <- as.character(i)
        tmp_all <- rbind(tmp_all, tmp)
    }
    colnames(tmp_all) <- colnames(tmp)

    if(!is.null(param_table)){
       # Generate data for prior plots
        prior_dat <- generate_prior_data(colnames(mcmc_chains[[1]]),param_table)
    }
    # For densities
    melted <- NULL
    for(i in 1:length(mcmc_chains)){
        tmp <- as.data.frame(mcmc_chains[[i]])
        tmp_melt <- melt(tmp)
        tmp_melt$chain <- as.character(i)
        melted <- rbind(melted, tmp_melt)
    }

    
    for(i in 2:3){
        tmp_filename <- paste(filename,"_",colnames(mcmc_chains[[1]][i]),sep="")
        tmp_filename <- paste(tmp_filename, "_MCMC_plots.png", sep="")
#'        png(tmp_filename, height=6,width=16)
        tmp_plot <- grid.arrange(mcmc_iter_multi(colnames(mcmc_chains[[1]])[i],tmp_all,burnin,best_fit),
                                mcmc_density_multi(colnames(mcmc_chains[[1]])[i],melted,
                          c(param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"lower_bound"],param_table[param_table$names==colnames(mcmc_chains[[1]])[i],"upper_bound"]), #'prior_dat[prior_dat$param==colnames(mcmc_chains[[1]])[i],c("variable","value","chain")],
                       NULL,
                    best_fit
                 )
                    ,ncol=2)
   #'     dev.off()
        png(tmp_filename,height=480,width=1000)
        plot(tmp_plot)
        dev.off()
    }
save.image("ffs.RData")
quit()
n
